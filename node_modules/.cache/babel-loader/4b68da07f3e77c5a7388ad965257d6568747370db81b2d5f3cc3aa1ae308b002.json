{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shoai\\\\Desktop\\\\AI Scanner\\\\ai-scanner\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload({\n  onFileUpload\n}) {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles && acceptedFiles.length > 0) {\n      onFileUpload(acceptedFiles[0]);\n    }\n  }, [onFileUpload]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*',\n    multiple: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    className: \"dropzone\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop the image file here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag and drop an image file here, or click to select a file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useCallback","useDropzone","jsxDEV","_jsxDEV","FileUpload","onFileUpload","_s","onDrop","acceptedFiles","length","getRootProps","getInputProps","isDragActive","accept","multiple","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shoai/Desktop/AI Scanner/ai-scanner/src/components/FileUpload.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nfunction FileUpload({ onFileUpload }) {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    if (acceptedFiles && acceptedFiles.length > 0) {\r\n      onFileUpload(acceptedFiles[0]);\r\n    }\r\n  }, [onFileUpload]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/*',\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps()} className=\"dropzone\">\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop the image file here...</p>\r\n      ) : (\r\n        <p>Drag and drop an image file here, or click to select a file</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAGP,WAAW,CAAEQ,aAAa,IAAK;IAC5C,IAAIA,aAAa,IAAIA,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7CJ,YAAY,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;IAChC;EACF,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,MAAM;IAAEK,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGX,WAAW,CAAC;IAChEM,MAAM;IACNM,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAA,GAASO,YAAY,CAAC,CAAC;IAAEK,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAC3Cb,OAAA;MAAA,GAAWQ,aAAa,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7BR,YAAY,gBACXT,OAAA;MAAAa,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAElCjB,OAAA;MAAAa,QAAA,EAAG;IAA2D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAvBQF,UAAU;EAAA,QAOqCH,WAAW;AAAA;AAAAoB,EAAA,GAP1DjB,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}